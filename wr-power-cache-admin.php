<?php
/**
 * @package: WpRetro Power Cache
 * Author: WpRetro
 * Description: A simple page/post cache plugin
 * Plugin URI: http://wpretro.com/plugins/Power-Cache
 * Version: 0.0.1
 */

if ( ! class_exists( 'WR_Power_Cache_Admin' ) ) :
	class WR_Power_Cache_Admin {
		protected static $instance;

		public function __construct() {
			$this->add_actions();
			$this->add_filters();

      add_action( 'wp_ajax_clear_all_cache', array( $this, 'clear_all_cache_by_admin' ) );
      add_action( 'wp_ajax_nopriv_clear_all_cache', array( $this, 'clear_all_cache_by_admin' ) );
      add_action( 'admin_notices', array($this,'clear_all_cache_notice'));
		}

		/* Add Settings Page Link */
		public function add_wp_power_cache_settings_link( $links ) {
			$settings_link = '<a href="admin.php?page=setting-power-cache">' . __( 'Settings' ) . '</a>';

			return array_push( $links, $settings_link );
		}

		/* Show Notice */
		public function wp_power_cache_admin_notice() {
			if ( isset( $_GET['settings-updated'] ) ) :
				settings_errors();
			endif;
		}

		/* Add Settings */
		public function power_cache_init() {
			register_setting( 'wp-power-cache-group', 'wp_power_cache_settings' );

			$active_tab = isset( $_GET['tab'] ) ? $_GET['tab'] : 'debug_options';

			if ( $active_tab == 'debug_options' ) {

				add_settings_section( 'developer_flag', __( 'Developer Mode', 'wp-power-cache' ), array(
					&$this,
					'developer_flag_callback'
				), 'setting-power-cache' );
				add_settings_field( 'developer_flag_settings', __( 'Enable Developer Mode', 'wp-power-cache' ), array(
					&$this,
					'developer_flag_settings_callback'
				), 'setting-power-cache', 'developer_flag' );

				add_settings_section( 'debug_flag', __( 'Debug', 'wp-power-cache' ), array(
					&$this,
					'debug_callback'
				), 'setting-power-cache' );
				add_settings_field( 'debug_settings', __( 'Debugging', 'wp-power-cache' ), array(
					&$this,
					'debug_field_callback'
				), 'setting-power-cache', 'debug_flag' );

			}
			if ( $active_tab == 'other_options' ) {
				add_settings_section( 'others', __( 'Coming Soon.', 'wp-power-cache' ), array(
					&$this,
					'others'
				), 'setting-power-cache' );
			}
		}

		public function developer_flag_settings_callback() {
			$settings = (array) get_option( 'wp_power_cache_settings' );
			$field    = "developer_flag";
			$is_dev   = esc_attr( $settings[ $field ] );
			$checked  = '';
			if ( isset( $is_dev ) && $is_dev == 1 ) {
				$checked = 'checked';
			}
			echo '<input type="checkbox" name="wp_power_cache_settings[developer_flag]" value="1"' . $checked . '/>';
			_e( '&nbsp;&nbsp;Check it to show Page Loading Time in header area after caching.', 'wp-power-cache' );
		}

		public function debug_callback() {
		}

		public function debug_field_callback() {

			$settings = (array) get_option( 'wp_power_cache_settings' );
			$field    = "debug_flag";
			$is_debug = esc_attr( $settings[ $field ] );
			$checked  = '';
			if ( isset( $is_debug ) && $is_debug == 1 ) {
				$checked = 'checked';
			}
			echo '<input type="checkbox" name="wp_power_cache_settings[debug_flag]" value="1"' . $checked . '/>';
			_e( '&nbsp;&nbsp;Display comments at the end of every page like below :', 'wp-power-cache' );
			_e( '<pre>&lt;!-- Your dynamic page generated in 0.0128 seconds. -->
&lt;!-- This cached page generated by WP-Power-Cache plugin on ' . date( "d-m-Y H:i:s", time() ) . ' --></pre>', 'wp-power-cache' );
		}

		public function others() {

		}

		/* Add Menu for WP Power Cache page */
		public function power_cache_menu() {
			add_menu_page( 'WP Power Cache', 'WP Power Cache', 'manage_options', 'setting-power-cache', array(
				&$this,
				'power_cache_setting_page'
			), 'dashicons-controls-skipforward' );
		}

		public function power_cache_setting_page() {
			require_once 'power-cache-setting-page.php';
		}

		public function developer_flag_callback() {
		}

		public function clear_all_cache_by_admin() {
			WR_Power_Cache::clear_all_cache();
			wp_send_json_success( "success" );
		}

		public function clear_all_cache_notice() {
			?>
            <div class="notice notice-success" style="display:none;">
                <p><?php _e( 'All cache deleted successfully...!', 'wp-power-cache' ); ?></p>
            </div>
			<?php
		}

		private function add_filters() {
			add_filter( 'plugin_action_links_' . plugin_basename( __FILE__ ), array(
				$this,
				'add_wp_power_cache_settings_link'
			) );
		}

		private function add_actions() {
			add_action( 'admin_menu', array( $this, 'power_cache_menu' ), 10, 3 );
			add_action( 'admin_init', array( $this, 'power_cache_init' ), 10, 3 );
			add_action( 'admin_notices', array( $this, 'wp_power_cache_admin_notice' ) );

			add_action( 'wp_ajax_clear_all_cache', array( $this, 'clear_all_cache_by_admin' ) );
			add_action( 'wp_ajax_nopriv_clear_all_cache', array( $this, 'clear_all_cache_by_admin' ) );
			add_action( 'admin_notices', array( $this, 'clear_all_cache_notice' ) );
		}

		static public function run() {
          if (self::$instance == NULL) {
            self::$instance = new self();
          }
          return self::$instance;
        }
	}
	WR_Power_Cache_Admin::run();
endif;

